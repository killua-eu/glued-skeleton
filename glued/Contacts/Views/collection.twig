{% extends '/Core/Views/templates/default.twig' %}

{% block content %}

<div class="section-header">
  <h1>{{ __('Contacts') }}</h1><button type="button" class="btn btn-primary" style="margin-left: 1em;" data-toggle="modal" data-id="" data-uri="" data-name="" data-domain="" data-driver="" data-target="#contacts_items_create_modal">{{ __('New company') }}</button>
</div>

<div class="section-body">


  <div class="row">
    <div class="col-12">
      <div class="card">
        <div class="card-body p-0">
          <div class="table-responsive">
            <table class="table table-striped" id="contacts_items">
              <thead>
                <tr>
                  <th class="col-sm-1">{{ __('Calendar') }}</th>
                  <th class="col-sm-2">{{ __('Team') }}</th>
                  <th class="col-sm-1">{{ __('Driver') }}</th>
                  <th class="col-sm-3">{{ __('Name') }}</th>
                  <th class="col-sm-3">{{ __('url') }}</th>
                  <th class="col-sm-1">{{ __('Manage') }}</th>
                </tr>
              </thead>
              <tbody id="contacts_items_placeholder">
                {% verbatim %}
                <script type="text/twig" id="contacts_items_obj_twig">
                <tr id="contacts_items_object_{{ row.id }}">
                  <td class="col-sm-1">{{ row.id }} <a href="{{ url_for('calendar.sources.sync.api01') }}"><i class="fas fa-sync"></a></i></td>
                  <td class="col-sm-2">{{ row.domain_name }} ({{ row.domain }})</td>
                  <td class="col-sm-1">{{ row.driver }}</td>
                  <td class="col-sm-3">{{ row.name }}</td>
                  <td class="col-sm-3"><a href="{{ row.uri }}">{{ row.uri }}</a></td>
                  <td class="col-sm-1">
                    <button type="button" class="btn btn-icon btn-sm" data-toggle="modal" data-target="#contacts_items_update_modal" data-id="{{ row.id }}" data-uri="{{ row.uri }}" data-name="{{ row.name }}" data-domain="{{ row.domain }}" data-driver="{{ row.driver }}"><i class="fas fa-edit"></i></button><button type="button" class="btn btn-icon btn-sm" data-toggle="modal" data-target="#contacts_items_delete_modal" data-id="{{ row.id }}" data-uri="{{ row.uri }}" data-name="{{ row.name }}"><i class="fas fa-trash"></i></button>
                  </td>
                </tr>
                </script>
                <script type="text/twig" id="contacts_items_col_twig">
                {% for row in data %}
                {% include "contacts_items_obj_twig" %}
                {% endfor %}
                </script>
                {% endverbatim %}
              </tbody>
            </table>

            <form id="form-beer_v1" name="form-beer_v1">
    <div class="typeahead__container">
        <div class="typeahead__field">
            <div class="typeahead__query">
                <input class="js-typeahead-beer_v1" name="beer_v1[query]" placeholder="Search" autocomplete="off">
            </div>
            <div class="typeahead__button">
                <button type="submit">
                    <i class="typeahead__search-icon"></i>
                </button>
            </div>
        </div>
    </div>
</form>



          </div>
        </div>
      </div>
    </div>
  </div>
</div>
{% include '/Contacts/Views/Partials/contacts_items_modal.twig' with {'contacts_items_id': 'contacts_items_create'} %}
{% include '/Contacts/Views/Partials/contacts_items_modal.twig' with {'contacts_items_id': 'contacts_items_update'} %}
{# {% include '/Contacts/Views/Partials/contacts_items_delete_modal.twig' with {'contacts_items_id': 'contacts_items_delete'} %} #}
{% endblock %}


{% block additionaljs %}
{# twig.js initialized in public/assets/js/glued.js #}
<script nonce="{{ csp_nonce.script_src }}" type="text/javascript">

  //
  // Onload ajax to fetch calendar data
  // 
  $( document ).ready(function() {
    $.ajax({
      url: "{{ url_for('contacts.items.api01') }}",
      contentType: "application/json",
      dataType: 'json',
      success: function(res) {
        $("#contacts_items_placeholder").append(Twig.twig({ ref: "contacts_items_col_twig" }).render({ data: res.data }))
      }
    })
  });
  
  //
  // Create + Update + Delete modals
  // 
  $('#contacts_items_update_modal').on('show.bs.modal', function (event) {
    var modal = $(this)
    var e = $(event.relatedTarget) // event which triggered the modal
    modal.find('.modal-title').text('{{ __("Edit remote calendar") }} ' + e.data('id'));
    modal.find('.modal-dialog form').attr('action', '{{ url_for("contacts.items.api01") }}/' + e.data('id') );
    modal.find('.modal-body input[name="name"]').val(e.data('name'));
    modal.find('.modal-body input[name="uri"]').val(e.data('uri'));
  });

  $('#contacts_items_create_modal').on('show.bs.modal', function (event) {
    var modal = $(this)
    var e = $(event.relatedTarget) // event which triggered the modal
    modal.find('.modal-title').text('{{ __("New remote calendar") }}');
  });

  $('#contacts_items_delete_modal').on('show.bs.modal', function (event) {
    var modal = $(this)
    var e = $(event.relatedTarget) // event which triggered the modal
    modal.find('.modal-title').text('{{ __("Delete remote calendar") }} ' + e.data('id'));
    modal.find('.modal-dialog form').attr('action', '{{ url_for("calendar.sources.api01") }}/' + e.data('id') );
    modal.find('.modal-body').text('{{ __("Do you really want to delete the calendar:") }} ' + e.data('name') + ' (' + e.data('uri') + ')?');
  });

  //
  // Create handle
  // 
  $("#contacts_items_create_form").ajaxSubmit({
    data: function() {
      return $(this).serialize();
    },
    success: function(res) {
      var idtwig = 'contacts_items_obj_twig';
      $('#toast-placeholder').empty();
      $(Twig.twig({ ref: 'contacts_items_obj_twig' }).render({ row: res.data })).prependTo("#contacts_items > tbody");
      $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Calendar sources") }}' , msg: '{{ __("New entry saved.") }}' })).appendTo("#toast-placeholder");
      $('.toast').toast('show');
      $('#contacts_items_create_modal').modal('toggle');
    },
    error: function(res) {
      $('#toast-placeholder').empty();
      $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Calendar sources") }}' , msg: '{{ __("Error: ") }}' + res.status })).appendTo("#toast-placeholder");
      $('.toast').toast('show');
    }
  });


  //
  // Update handle
  // 
  $("#contacts_items_update_form").ajaxSubmit({
    data: function() {
      return $(this).serialize();
    },
    headers: {
      "X-Http-Method-Override": "PATCH"
    },
    success: function(res) {
      $('#toast-placeholder').empty();
      $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Calendar source") }}' , msg: '{{ __("Saved.") }}' })).appendTo("#toast-placeholder");
      $('.toast').toast('show');
      $('#contacts_items_update_modal').modal('toggle');
      $('#contacts_items_placeholder').empty();
      $.ajax({
        url: "{{ url_for('calendar.sources.api01') }}",
        contentType: "application/json",
        dataType: 'json',
        success: function(res) {
          $("#contacts_items_placeholder").append(Twig.twig({ ref: "contacts_items_col_twig" }).render({ data: res.data }))
        }
      })
    },
    error: function(res) {
      $('#toast-placeholder').empty();
      $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Calendar sources") }}' , msg: '{{ __("Error: ") }}' + res.error.message })).appendTo("#toast-placeholder");
      $('.toast').toast('show');
    }
  });

  //
  // Delete handle
  // 
  $("#contacts_items_delete_form").ajaxSubmit({
    data: function() {
      return $(this).serialize();
    },
    headers: {
      "X-Http-Method-Override": "DELETE"
    },
    success: function(res) {
      var idtwig = 'contacts_items_obj_twig';
      $('#toast-placeholder').empty();
      $('#contacts_items > tbody > #contacts_items_object_' + res.data.id).remove();
      $('#contacts_items_delete_modal').modal('toggle'); 
      $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Calendar sources") }}' , msg: '{{ __("Removed source ") }}' + res.data.id + '.' })).appendTo("#toast-placeholder");
      $('.toast').toast('show');
    },
    error: function(res) {
      $('#toast-placeholder').empty();
      $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Calendar sources") }}' , msg: '{{ __("Error: ") }}' + res.status })).appendTo("#toast-placeholder");
      $('.toast').toast('show');
    }
  });

// Typeahead

$.typeahead({
    input: '.js-typeahead-beer_v1',
    debug: true,
    minLength: 1,
    maxItem: 15,
    dynamic: true,
    order: "asc",
    hint: true,
    group: {
        template: "{% verbatim %}{{group}}{% endverbatim %} beers!"
    },
    maxItemPerGroup: 5,
    backdrop: {
        "background-color": "#fff"
    },
    {% verbatim %}
    /*
    template: function (query, item) {
         var color = "#777";
        if (item.status === "owner") {
            color = "#ff1493";
        }
 
        return '<span class="row">' +
            '<span class="avatar">' +
                '<img src="{{avatar}}">' +
            "</span>" +
            '<span class="username">{{username}}{{org}} <small style="color: ' + color + ';">({{status}}{{regid}})</small></span>' +
            '<span class="id">({{id}})</span>' +
        "</span>"
    },*/
    {% endverbatim %}
    //dropdownFilter: "all beers",
    emptyTemplate: 'No result for "{{query}}"',
    // so there's a difference here in the data ... "data.beer.stout" returns an array, "data.name" in contacts just the string.
    source: {
   /*
        user: {
            display: "username",
            ajax: function (query) {
                return {
                    url: "/assets/cache/users_v1.json",
                    path: "data.user",
                    type: "GET",
                    data: {
                        q: "{{query}}"
                    },
                    callback: {
                        done: function (data) {
                            for (var i = 0; i < data.data.user.length; i++) {
                                if (data.data.user[i].username === 'running-coder') {
                                    data.data.user[i].status = 'owner';
                                } else {
                                    data.data.user[i].status = 'contributor';
                                }
                            }
                            return data;
                        }
                    }
                }
            }
        },*/
        cz_names: {
            display: "org",
            ajax: function (query) {
                return {
                    url: "/api/contacts/search/v1/cz/names/" + query,
                    path: "data",
                    type: "GET",
                }
            },
            {% verbatim %}
            // tady by se mi mel prepisovat defaultni template templatem uvedenym nize, ale nedeje se. proc?
            template: function (query, item) {
                return '<span class="row">' +
                    '<span class="avatar">' +
                        '<img src="{{avatar}}">' +
                    "</span>" +
                    '<span class="username">{{org}} <small>({{regid}})</small></span>' +
                    '<span class="id">({{adr}})</span>' +
                "</span>";
            }
            {% endverbatim %}
        },
        cz_ids: {
            display: "org",
            ajax: function (query) {
                return {
                    url: "/api/contacts/search/v1/cz/ids/" + query,
                    path: "data",
                    type: "GET",
                }
            },
            {% verbatim %}
            // tady by se mi mel prepisovat defaultni template templatem uvedenym nize, ale nedeje se. proc?
            template: function (query, item) {
                return '<span class="row">' +
                    '<span class="avatar">' +
                        '<img src="{{avatar}}">' +
                    "</span>" +
                    '<span class="username">{{org}} <small>({{regid}})</small></span>' +
                    '<span class="id">({{adr}})</span>' +
                "</span>";
            }
            {% endverbatim %}
        },
        /*
    callback: {
        onClickAfter: function (node, a, item, event) {
 
            event.preventDefault;
 
            // href key gets added inside item from options.href configuration
            alert(item.href);
 
        }
    },
    debug: true*/
  }
});


  </script>
  {% endblock %}



