{% if json_schema_output is defined %}

{{ assets({files: [
  '@public/assets/node_modules/react/umd/react.production.min.js',
  '@public/assets/node_modules/react-dom/umd/react-dom.production.min.js',
  '@public/assets/node_modules/react-jsonschema-form/dist/react-jsonschema-form.js',
  '@public/assets/node_modules/@babel/standalone/babel.min.js',
], name: 'rjsf.js'}) }}

<script type="text/babel">
    const Form = JSONSchemaForm.default;
    const uiSchema = {{ json_uischema_output | raw }};
    const schema = {{ json_schema_output | raw }};
    const formData = {{ json_formdata_output | raw }};


    function onSubmit(formData) {
        {{ json_onsubmit_output | raw }}
    }


    function onChange(formData) { }


    {% if json_formdata_render_custom_array is not defined %}
    ReactDOM.render((<Form onChange={onChange} onSubmit={onSubmit} uiSchema={uiSchema} schema={schema} formData={formData}></Form>), document.getElementById("rjsf"));
    {% else %}
    const FloatingLabelWidget = (props) => {
        return (
            <input type="text" id={props.id} className="form-control underlined" value={props.value} placeholder={props.placeholder} required={props.required} onChange={(event) => props.onChange(event.target.value)} />
        );
    };

    const widgets = {
        floatingLabelWidget: FloatingLaberlWidget
    };
    {% endif %}
</script>

{% endif %}